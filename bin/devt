#!/bin/bash

set -o errexit -o pipefail -o nounset # -o xtrace

host=${1:-rravi-1}

if [ -z "$SSH_AUTH_SOCK" ]; then
    eval `ssh-agent -s`
    ssh-add $HOME/.ssh/id_rsa
fi

priv_key=$HOME/.ssh/id_rsa
if [ -f "$priv_key" ]; then
    if ! ssh-add -L >/dev/null 2>&1; then
        ssh-add "$priv_key"
    fi
fi

function debug_log() {
    echo >&2 "$(date +'%h %d %H:%M:%S')> $@"
}

stderr_file=$(mktemp /tmp/devt-${host}.stderr.XXXX)
trap "{ rm -f ${stderr_file}; }" EXIT

forward_args="-o ExitOnForwardFailure=yes -D 50001 -R 2489:localhost:2489"

while true; do
    ret=0
    ssh 2>${stderr_file} -t $forward_args $host "tmux attach -d || tmux new-session -s dev" || ret=$?

    if [ "$ret" -eq 255 ]; then
        if grep -q 'Could not request local forwarding.' ${stderr_file}; then
            # force release remote forwarded ports from prev sessions so that we can use them
            debug_log "got exit code ${ret} from ssh. killing sshd on the server to release ports"
            ssh $host -- "tmux detach-client || (sleep 1; pkill --signal TERM --oldest sshd --uid \$USER)" > /dev/null 2>&1 || true
            continue
        fi
    fi

    if [ "$ret" -ne 0 ]; then
        cat >&2 ${stderr_file}
    fi
    exit $ret
done
